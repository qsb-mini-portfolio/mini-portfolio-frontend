stages: [build, deploy]

build:
  stage: build
  image: node:20
  script:
    - npm ci
    - npm run build -- --configuration=production
  artifacts:
    paths: [dist/]
    expire_in: 1 week
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'

deploy:
  stage: deploy
  image: public.ecr.aws/aws-cli/aws-cli:latest
  needs: ["build"]
  script:
    - set -euxo pipefail
    - aws --version
    - aws sts get-caller-identity
    # Trouve le dossier de build (Angular 16+)
    - DIST_DIR="$(ls -d dist/*/browser/ dist/*/ 2>/dev/null | head -n 1)"
    - echo "DIST_DIR=${DIST_DIR}"
    # 1) Assets fingerprintés => cache long
    - aws s3 cp "${DIST_DIR}" "s3://${S3_BUCKET}/" --recursive \
        --exclude "index.html" --exclude "assets/config.json" \
        --cache-control "public,max-age=31536000,immutable"
    # 2) index.html => no-cache
    - aws s3 cp "${DIST_DIR}index.html" "s3://${S3_BUCKET}/index.html" \
        --cache-control "no-cache,no-store,must-revalidate" --content-type "text/html"
    # 3) config.json => no-cache (si présent)
    - if [ -f "${DIST_DIR}assets/config.json" ]; then
        aws s3 cp "${DIST_DIR}assets/config.json" "s3://${S3_BUCKET}/assets/config.json" \
          --cache-control "no-cache" --content-type "application/json";
      fi
    # 4) Invalidation CloudFront ciblée
    - aws cloudfront create-invalidation --distribution-id "${CF_DIST_ID}" --paths "/index.html" "/assets/config.json"
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
