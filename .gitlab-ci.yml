stages: [build, deploy]

# --- BUILD ANGULAR ---
build:
  stage: build
  image: node:20
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/
  script:
    - npm ci
    - npm run build -- --configuration=production
  artifacts:
    paths:
      - dist/
    expire_in: 1 week
  only:
    - main

# --- DEPLOY TO S3 + INVALIDATE CLOUDFRONT ---
deploy:
  stage: deploy
  image: heyvaldemar/aws-kubectl:latest
  variables:
    DIST_DIR: "dist/frontend/browser/"
    ASSETS_DIR: "${DIST_DIR}assets"
  script:
    - set -euo pipefail
    - aws --version
    - aws sts get-caller-identity

    - |
      mkdir -p "$ASSETS_DIR"

      ESCAPED_URL="$(printf '%s' "$API_BASE_URL" | sed -e 's/[&]/\\&/g')"
      sed "s#__API_BASE_URL__#${ESCAPED_URL}#g" src/assets/config.prod.json > "${ASSETS_DIR}/config.json"
      echo "assets/config.json généré avec apiBaseUrl=${API_BASE_URL}"     

    - >
      aws s3 sync "${DIST_DIR}" "s3://${S3_BUCKET}/" --delete
      --exclude "index.html"
      --exclude "assets/config.json"
      --cache-control "public,max-age=31536000,immutable"

    - aws s3 cp "${DIST_DIR}index.html" "s3://${S3_BUCKET}/index.html" --cache-control "no-cache,no-store,must-revalidate" --content-type "text/html"

    - aws s3 cp "${ASSETS_DIR}/config.json" "s3://${S3_BUCKET}/assets/config.json" --cache-control "no-cache" --content-type "application/json"

    - aws cloudfront create-invalidation --distribution-id "${CF_DIST_ID}" --paths "/index.html" "/assets/config.json"
  only:
    - main
  environment:
    name: production
  dependencies:
    - build
