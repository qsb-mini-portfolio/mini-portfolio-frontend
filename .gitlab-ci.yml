stages: [build, deploy]

default:
    cache:
        paths: [node_modules/]

variables:
    ANGULAR_CONFIGURATION: "production"

build:
    stage: build
    image: node:20
    script:
        - npm ci
        - npm run build -- --configuration=${ANGULAR_CONFIGURATION}
    artifacts:
        paths:
            - dist/
        expire_in: 1 week
    rules:
        - if: '$CI_COMMIT_BRANCH == "main"'

deploy:
  stage: deploy
  image: amazon/aws-cli:2
  needs: ["build"]
  script:
    # 1) Sync des assets fingerprintés avec cache long
    - aws s3 sync dist/ "s3://${S3_BUCKET}/" --delete --exclude "index.html" --exclude "assets/config.json" --cache-control "public,max-age=31536000,immutable"
    # 2) index.html en no-cache
    - |
      find dist -name index.html -print0 | xargs -0 -I {} aws s3 cp "{}" "s3://${S3_BUCKET}/index.html" \
        --cache-control "no-cache,no-store,must-revalidate" --content-type "text/html"
    # 3) assets/config.json en no-cache
    - |
      find dist -path "*/assets/config.json" -print0 | xargs -0 -I {} aws s3 cp "{}" "s3://${S3_BUCKET}/assets/config.json" \
        --cache-control "no-cache" --content-type "application/json"
    # 4) Invalidation ciblée
    - aws cloudfront create-invalidation --distribution-id "${CF_DIST_ID}" --paths "/index.html" "/assets/config.json"
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  environment:
    name: production       
    
